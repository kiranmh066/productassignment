// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductDAL;

namespace ProductDAL.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20221020112228_ProductD")]
    partial class ProductD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProductEntity.Article", b =>
                {
                    b.Property<Guid>("articleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("articleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("colorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblArticle")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("articleId");

                    b.HasIndex("colorId");

                    b.HasIndex("tblArticle");

                    b.ToTable("tblArticle");
                });

            modelBuilder.Entity("ProductEntity.Color", b =>
                {
                    b.Property<Guid>("colorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("colorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("colorId");

                    b.ToTable("tblColor");
                });

            modelBuilder.Entity("ProductEntity.Product", b =>
                {
                    b.Property<Guid>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("channelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productYear")
                        .HasColumnType("int");

                    b.Property<Guid>("sizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblArticlearticleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("productId");

                    b.HasIndex("sizeId");

                    b.HasIndex("tblArticlearticleId");

                    b.ToTable("tblProduct");
                });

            modelBuilder.Entity("ProductEntity.SizeScale", b =>
                {
                    b.Property<Guid>("sizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("sizeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sizeId");

                    b.ToTable("tblSizeScale");
                });

            modelBuilder.Entity("ProductEntity.Article", b =>
                {
                    b.HasOne("ProductEntity.Color", "tblColor")
                        .WithMany()
                        .HasForeignKey("colorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductEntity.Product", null)
                        .WithMany("articles")
                        .HasForeignKey("tblArticle");

                    b.Navigation("tblColor");
                });

            modelBuilder.Entity("ProductEntity.Product", b =>
                {
                    b.HasOne("ProductEntity.SizeScale", "tblSize")
                        .WithMany()
                        .HasForeignKey("sizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductEntity.Article", "tblArticle")
                        .WithMany()
                        .HasForeignKey("tblArticlearticleId");

                    b.Navigation("tblArticle");

                    b.Navigation("tblSize");
                });

            modelBuilder.Entity("ProductEntity.Product", b =>
                {
                    b.Navigation("articles");
                });
#pragma warning restore 612, 618
        }
    }
}
